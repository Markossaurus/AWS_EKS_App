pipeline{
    agent any
    stages {
          stage("checkout"){
              steps{
                checkout([$class:'GitSCM', branches:[[name:'**']], extensions:[], userRemoteConfigs: [[credentialsId: 'edd5b572-22c2-43c1-a50b-991127524391', name:'origin', refspec:"+refs/pull/*:refs/remotes/origin/pr/*", url:'git@github.com:Markossaurus/AWS_EKS_App.git']]])
              }
          }
          stage("build images"){
             steps{
                echo "building webserver1 image"
                sh """
                    docker build -t localhost:5000/webserver1:latest NginxCostum1/.
                """

                echo "building webserver2 images"
                sh """
                    docker build -t localhost:5000/webserver2:latest NginxCostum2/.
                """

                echo "building haproxy image"
                sh """
                    docker build -t localhost:5000/haproxy:latest HAProxyImage/.
                """
             }
          }

          stage("start local registry"){
             steps{
                sh 'docker run -d -p 5000:5000 --restart always --name registry registry:2'
             }
          }
          
          stage("push images to local registry"){
              steps{
                sh 'docker push localhost:5000/webserver1:latest'
                sh 'docker push localhost:5000/webserver2:latest'
                sh 'docker push localhost:5000/haproxy:latest'
              }
           } 

         stage("deploy eks cluster and app"){
             
             steps{
                echo "deploying cluster"
                dir("terraform") {
                    sh "terraform init"
                    sh "terraform apply"
                }
             } 
         }
         stage("create kubectl config"){
              steps{
                echo "creating kubectl config"
                sh "aws eks --region eu-central-1 update-kubeconfig --name haproxy"
                }
            }
    }
}
         
 
  

  



